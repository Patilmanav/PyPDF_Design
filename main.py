from fpdf import FPDF
from data import data
import datetime

class PDF(FPDF):
    def header(self):
        # Left margin
        self.set_fill_color(0, 18, 95 )
        self.rect(0, 0, left_margin, self.h, 'F')

    # Page footer
    def footer(self):
        # Position at 1.5 cm from bottom
        self.set_y(-15)
        # Arial italic 8
        self.set_font('Arial', 'I', 8)
        # Page number
        self.cell(0, 10, 'Page ' + str(self.page_no()) + '/{nb}', 0, 0, 'C')



# Instantiation of inherited class
left_margin = 5
pdf = PDF()
pdf.alias_nb_pages()
pdf.add_page()

# defined Fonts 
pdf.add_font('DejaVu', '', './font/DejaVuSans.ttf', uni=True)

# Set the width for the image
image_width = pdf.w - 2 * left_margin
pdf.image('./img/logo.png', left_margin, 10, w=image_width)
pdf.ln(30)

# Add confidential note
pdf.set_xy(0, 30 + 10)  # Adjust y-position after the image

pdf.set_font('Times', '', 12)
pdf.set_text_color(255, 255, 255)
pdf.set_fill_color(0, 18, 95 )
pdf.multi_cell(pdf.w, 10, "NOTE: This report is strictly confidential and only for Police officers. Don't share it with anyone else or post it on WhatsApp, Telegram, or anywhere else public.",0,fill=True,align='C')

pdf.ln(20)

pdf.set_left_margin(left_margin + 10)
pdf.set_text_color(0, 0, 0)
pdf.set_font('Times', 'B', 18)
pdf.image("./img/arrow.png",w=10)
pdf.set_xy(left_margin + 25, 80)
pdf.cell(0, 10, 'Subject Informationn', 0,ln=1)


pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Phone Number')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, f": {data['Truecaller_data']['data']['phones'][0]['e164Format']}", ln=1)
pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Date Of Report')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': {}'.format(datetime.date.today()), ln=1)
pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Report Generated by')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': +91 0123456789', ln=1)

pdf.ln(20)

pdf.set_text_color(0, 0, 0)
pdf.set_font('Times', 'B', 18)
pdf.image("./img/arrow.png",w=10)
pdf.set_xy(left_margin + 25, 80+60)
pdf.cell(0, 10, "NAME's", 0,ln=1)

names_len = None
names = [data['eyecon_data']['data']['fullName']]
for i in data['eyecon_data']['data']['otherNames']:
    names.append( i['name'])

for index,i in enumerate(names):
    names_len = len(names)
    pdf.cell(0,10,f"{index}.        {i}",0,1)
    
pdf.ln(20)

pdf.set_text_color(0, 0, 0)
pdf.set_font('Times', 'B', 18)
pdf.image("./img/arrow.png",w=10)
pdf.set_xy(left_margin + 25, 80+60+(10*names_len+30))
pdf.cell(0, 10, "CARRIER INFO", 0,ln=1)

truecaller_data = data['Truecaller_data']['data']

pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Mobile')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': {}'.format(truecaller_data['phones'][0]['e164Format']), ln=1)
pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Carrier')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': {}'.format(truecaller_data['phones'][0]['carrier']), ln=1)
pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Type')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': {}'.format(truecaller_data['phones'][0]['type']), ln=1)
pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Addresss')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': {}, {}'.format(truecaller_data['addresses'][0]['address'],truecaller_data['addresses'][0]['city']), ln=1)

pdf.ln(20)

pdf.set_text_color(0, 0, 0)
pdf.set_font('Times', 'B', 18)
pdf.image("./img/arrow.png",w=10)
pdf.set_xy(left_margin + 25, 10)
pdf.cell(0, 10, "PORTING INFORMATION", 0,ln=1)

pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Number Ported')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': yes', ln=1)
pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Present Provider')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': Jio', ln=1)
pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Circle')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': Mumbai', ln=1)
pdf.set_font('Times', 'B', 16)
pdf.cell(80, 10, 'Service Type')
pdf.set_font('Times', '', 16)
pdf.cell(80, 10, ': prepaid', ln=1)

pdf.ln(20)

sc_md_ac = data['social_media_accounts']['data']['account_details']
wp_ac = data['whatsapp_data']
social_media_acc = {
    "WhatsApp":{
        "logo" : "./img/whatsapp.png",
        "Status": "Account Exist" if wp_ac['number'] else "Account Not Exist",
        "AboutStatus" : wp_ac['about'],
        "LastUpdate" : "19-11-2023 22:46"
    },
    
    "Flipkart":{
        "logo" : "./img/flipkart.png",
        "Status": "Account Exist" if sc_md_ac['flipkart'.lower()]['registered'] else "Account Not Exist",
    },
    
    "ZEE5":{
        "logo" : "./img/zee5.png",
        "Status": "Account Exist" if sc_md_ac['ZEE5'.lower()]['registered'] else "Account Not Exist",
    },
    
    "MakeMyTrip":{
        "logo" : "./img/makemytrip.png",
        "Status": "Account Exist" if sc_md_ac['MakeMyTrip'.lower()]['registered'] else "Account Not Exist",
    },
    
    "Snapdeal":{
        "logo" : "./img/snapdeal.png",
        "Status": "Account Exist" if sc_md_ac['Snapdeal'.lower()]['registered'] else "Account Not Exist",
    },
    
    "AltBalaji":{
        "logo" : "./img/alt_balaji.png",
        "Status": "Account Exist" if sc_md_ac['AltBalaji'.lower()]['registered'] else "Account Not Exist",
    },
    
    "Shopclues":{
        "logo" : "./img/shopclus.jpg",
        "Status": "Account Exist" if sc_md_ac['Shopclues'.lower()]['registered'] else "Account Not Exist",
    },
    
    "Ajio":{
        "logo" : "./img/alt_balaji.png",
        "Status": "Account Exist" if sc_md_ac['Ajio'.lower()]['registered'] else "Account Not Exist",
    },
    
}

pdf.set_text_color(0, 0, 0)
pdf.set_font('Times', 'B', 18)
pdf.image("./img/arrow.png",w=10)
pdf.set_xy(left_margin + 25, 80)
pdf.cell(0, 10, "SOCIAL MEDIA ACCOUNTS", 0,ln=1)

start = 110
for k,v in social_media_acc.items():
    if start<270:
        pdf.set_xy(left_margin+10, start)
        pdf.image(str(v['logo']),w=20)
        pdf.set_font('Times', 'B', 16)
        pdf.set_xy(left_margin + 35, start)
        pdf.cell(50,10,f"{str(k)}",0,1)
        
        pdf.set_font('Times', '', 16)
        pdf.set_xy(left_margin + 35, start+10)
        pdf.cell(50,10,"Status",0)
        
        pdf.cell(50,10,f"{str(v['Status'])}",0,1)
        if k=="WhatsApp":
            pdf.set_xy(left_margin + 35, start+20)
            pdf.cell(50,10,"AboutStatus",0)
            pdf.cell(50,10,f"{str(v['AboutStatus'])}",0,1)
            pdf.set_xy(left_margin + 35, start+30)
            pdf.cell(50,10,"LastUpdate",0)
            pdf.cell(50,10,f"{str(v['LastUpdate'])}",0,1)
        start += 55
    else:
        pdf.add_page()
        start = 10
        pdf.set_xy(left_margin+10, start)
        pdf.image(str(v['logo']),w=20)
        pdf.set_font('Times', 'B', 16)
        pdf.set_xy(left_margin + 35, start)
        pdf.cell(50,10,f"{str(k)}",0,1)
        
        pdf.set_font('Times', '', 16)
        pdf.set_xy(left_margin + 35, start+10)
        pdf.cell(50,10,"Status",0)
        pdf.cell(50,10,f"{str(v['Status'])}",0,1)
        if k=="WhatsApp":
            pdf.set_xy(left_margin + 35, start+20)
            pdf.cell(50,10,"AboutStatus",0)
            pdf.cell(50,10,f"{str(v['AboutStatus'])}",0,1)
            pdf.set_xy(left_margin + 35, start+30)
            pdf.cell(50,10,"LastUpdate",0)
            pdf.cell(50,10,f"{str(v['LastUpdate'])}",0,1)
        start += 55
        
pdf.add_page()
# //Source Images
pdf.set_text_color(0, 0, 0)
pdf.set_font('Times', 'B', 18)
pdf.image("./img/arrow.png",w=10)
pdf.set_xy(left_margin + 25, 10)
pdf.cell(0, 10, "Source Images", 0,ln=1)



pdf.add_page()
# //E-MAIL BREACHED
pdf.set_text_color(0, 0, 0)
pdf.set_font('Times', 'B', 18)
pdf.image("./img/arrow.png",w=10)
pdf.set_xy(left_margin + 25, 10)
pdf.cell(0, 10, "E-MAIL BREACHED", 0,ln=1)


pdf.add_page()
# //Legal Disclaimer for OSINT Report
pdf.set_text_color(0, 0, 0)
pdf.set_font('Times', 'B', 18)
pdf.image("./img/arrow.png",w=10)
pdf.set_xy(left_margin + 25, 10)
pdf.cell(0, 10, "Legal Disclaimer for OSINT Report", 0,ln=1)

para = '''
The information in this Open Source Intelligence (OSINT) report is derived from
publicly available data and online sources as of its creation date. The accuracy,
completeness, and reliability of the information can vary and are not guaranteed.
This report is for informational purposes only and does not constitute legal,
professional, or expert advice.

The findings and conclusions in this report are based on publicly accessible
information and do not include any confidential or proprietary data. The recipient
acknowledges that the information may change over time, and any actions taken
based on this report are at their own risk. This report is not intended to infringe
upon any individual’s privacy rights or violate any laws or regulations. It is the
recipient’s responsibility to use the information responsibly and in compliance with
all applicable laws, regulations, and ethical standards.

The creators and providers of this report are not liable for any losses, damages, or
consequences arising from the use or reliance on the information in this report. The
recipient should independently verify any information before making decisions or
taking actions based on this report. By using this report, the recipient agrees to
release, indemnify, and hold harmless the creators and providers from any claims,
demands, actions, or liabilities arising from its use.

It is strongly recommended that the recipient seek legal, professional, or expert
advice before making decisions or taking actions based on the information in this
report.
'''
pdf.set_font('DejaVu', '', 12)
pdf.multi_cell(0,10,str(para))

pdf.output('tuto2.pdf', 'F')
